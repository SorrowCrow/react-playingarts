[{"/home/cool/Desktop/react-playingarts/client/src/index.tsx":"1","/home/cool/Desktop/react-playingarts/client/src/App.tsx":"2","/home/cool/Desktop/react-playingarts/client/src/components/Menu.tsx":"3","/home/cool/Desktop/react-playingarts/client/src/components/DeckContext.tsx":"4","/home/cool/Desktop/react-playingarts/client/src/components/deckComponents/Cards.tsx":"5","/home/cool/Desktop/react-playingarts/client/src/components/headerComponents/DeckHeader.tsx":"6","/home/cool/Desktop/react-playingarts/client/src/components/deckComponents/DeckMenu.tsx":"7"},{"size":207,"mtime":1634145219872,"results":"8","hashOfConfig":"9"},{"size":503,"mtime":1634164218267,"results":"10","hashOfConfig":"9"},{"size":2715,"mtime":1634164367780,"results":"11","hashOfConfig":"9"},{"size":1060,"mtime":1634164263520,"results":"12","hashOfConfig":"9"},{"size":637,"mtime":1634141670186,"results":"13","hashOfConfig":"9"},{"size":2538,"mtime":1634146185748,"results":"14","hashOfConfig":"9"},{"size":439,"mtime":1634139444130,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18l0z1c",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/cool/Desktop/react-playingarts/client/src/index.tsx",[],"/home/cool/Desktop/react-playingarts/client/src/App.tsx",[],"/home/cool/Desktop/react-playingarts/client/src/components/Menu.tsx",["33","34"],"import { FC, useEffect, useState } from \"react\";\nimport { ReactComponent as Logo } from \"../assets/logo.svg\";\nimport { ReactComponent as MenuSvg } from \"../assets/menu.svg\";\nimport { ReactComponent as Shop } from \"../assets/shop.svg\";\nimport { useDeckContext } from \"./DeckContext\";\n\nconst Menu: FC = () => {\n    const deckId = useDeckContext().deckId;\n    const decks = useDeckContext().decks;\n\n    const [lastScrollTop, setlastScrollTop] = useState(0);\n\n    useEffect(() => {\n        window.addEventListener(\n            \"scroll\",\n            function () {\n                var st = window.pageYOffset || document.documentElement.scrollTop;\n                const element = document.getElementById(\"sub-menu\");\n\n                if (st > lastScrollTop && element !== null && st !== null) {\n                    console.log(\"yeeet\");\n                    element.style.bottom = \"100%\";\n                } else if (element !== null && st !== null) {\n                    element.style.bottom = \"0\";\n                }\n                setlastScrollTop(st);\n            },\n            false\n        );\n    }, []);\n\n    function menuHover(e: React.MouseEvent<SVGSVGElement, MouseEvent>) {\n        // e.currentTarget.style.background = \"white\";\n        // e.currentTarget.style.fill = \"purple\";\n    }\n    function menuOut(e: React.MouseEvent<SVGSVGElement, MouseEvent>) {\n        // e.currentTarget.style.background = \"\";\n        // e.currentTarget.style.fill = \"\";\n    }\n\n    return (\n        <header className={`header fixed overflow-hidden`}>\n            <div className={`flex content-between main-menu`}>\n                <div className={`flex menu`}>\n                    <MenuSvg className=\"menuSvg h-p\" onMouseLeave={menuOut} onMouseEnter={menuHover} fill={`white`} />\n                    <div className={`align-self-center`}>PLAYING ARTS</div>\n                </div>\n                <Logo fill=\"white\" className={`align-self-center`} />\n                <Shop className={`h-p shop`} fill={`purple`} />\n            </div>\n            <div className={`flex content-center sub-menu relative`} id={`sub-menu`}>\n                <div className={`items flex`}>\n                    <div className={`item h-p`}>ZERO</div>\n                    <div className={`item h-p`}>ONE</div>\n                    <div className={`item h-p`}>TWO</div>\n                    <div className={`item h-p`}>THREE</div>\n                    <div className={`item h-p`}>SPECIAL</div>\n                    <div className={`item h-p`}>FUTURE</div>\n                    <div className={`item h-p ${decks[0].name === \"Crypto Edition\" ? \"activated\" : \"\"}`}>CRYPTO</div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Menu;\n","/home/cool/Desktop/react-playingarts/client/src/components/DeckContext.tsx",[],"/home/cool/Desktop/react-playingarts/client/src/components/deckComponents/Cards.tsx",["35"],"import { FC } from \"react\";\nimport { ReactComponent as Metamask } from \"../../assets/+metamask.svg\";\n\nconst Cards: FC = ({}) => {\n    return (\n        <div className={`cards mg-1`}>\n            <div className={`mg-1`}>\n                <h2>Cards</h2>\n                <div className={`flex`}>\n                    <div className={`description`}>\n                        Hover the card to see animation. Click to read the story behind the artwork.\n                    </div>\n                    <Metamask />\n                </div>\n            </div>\n            <div className={`deck`}></div>\n        </div>\n    );\n};\n\nexport default Cards;\n","/home/cool/Desktop/react-playingarts/client/src/components/headerComponents/DeckHeader.tsx",[],"/home/cool/Desktop/react-playingarts/client/src/components/deckComponents/DeckMenu.tsx",["36"],"import { FC, ReactElement } from \"react\";\n\ninterface Props {\n    items: (String | ReactElement)[];\n}\n\nconst DeckMenu = ({ items }: Props) => {\n    return (\n        <div className={`deckMenu flex align-center`}>\n            {items.map((item: String | ReactElement) => (\n                <div className={`deckMenu-item ${typeof item === \"string\" ? \"h-p\" : \"\"}`}>{item}</div>\n            ))}\n        </div>\n    );\n};\n\nexport default DeckMenu;\n",{"ruleId":"37","severity":1,"message":"38","line":8,"column":11,"nodeType":"39","messageId":"40","endLine":8,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":30,"column":8,"nodeType":"43","endLine":30,"endColumn":10,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":20,"nodeType":"47","messageId":"48","endLine":4,"endColumn":22},{"ruleId":"37","severity":1,"message":"49","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},"@typescript-eslint/no-unused-vars","'deckId' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastScrollTop'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'FC' is defined but never used.",{"desc":"51","fix":"52"},"Update the dependencies array to be: [lastScrollTop]",{"range":"53","text":"54"},[1099,1101],"[lastScrollTop]"]